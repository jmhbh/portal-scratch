# Configuring this resource is a responsibility of the Portal Admin, or we can provide a template
# This route table is going to be mostly static we envision that the Portal admin will have two
# variations of this route table for either a mix of public and private APIs in one Portal or completely private portal
# the former route table is also applicable for completely public APIs (API key management will still require authn)

# Use case 1: Mix of public and private APIs in one Portal
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: portal-rt
  namespace: istio-gateway-ns
spec:
  hosts:
  - "bank.portal.io"
  virtualGateways:
  - name: north-south-gw
  defaultDestination:
    port:
      number: 9080
    ref:
      name: gloo-mesh-portal-server
      namespace: gloo-mesh
      cluster: cluster-1
  http:
  - forwardTo: {}
    name: authn
    labels:
      oauth: "true" # apply ext auth policy
    matchers:
    - uri:
        prefix: /v1/login
    - uri:
        prefix: /v1/logout
    - uri:
        prefix: /v1/me
    - uri:
        prefix: /v1/api-keys
    - headers:
      # this is a custom value (if needed)
      - name: jwt
      # this is the default value
      - name: id_token
  - forwardTo: {}
    name: no-auth
    matchers:
    - uri:
        prefix: /v1/apis
    - uri:
        prefix: /v1/usage-plans

-------- 

# Use case 2: Completely private Portal
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: portal-rt
  namespace: istio-gateway-ns
spec:
  hosts:
  - "bank.portal.io"
  virtualGateways:
  - name: north-south-gw
  defaultDestination:
    port:
      number: 9080
    ref:
      name: gloo-mesh-portal-server
      namespace: gloo-mesh
      cluster: cluster-1
  http:
  - forwardTo: {}
    name: authn
    labels:
      oauth: "true" # apply ext auth policy
    matchers:
    - uri:
        prefix: /v1
